
import java.awt.Color;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gabri
 */
public class FormMenu extends javax.swing.JFrame {

    /**
     * Creates new form FormMenu
     */
    String transformacao = "";
    
    public FormMenu() {
        initComponents();
        jButtonTranslacao.setForeground(Color.red);
        jButtonRotacao.setForeground(Color.red);
        jButtonEscala.setForeground(Color.red);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMatriz = new javax.swing.JTable();
        jButtonTranslacao = new javax.swing.JButton();
        jButtonRotacao = new javax.swing.JButton();
        jButtonEscala = new javax.swing.JButton();
        jTextFieldX = new javax.swing.JTextField();
        jTextFieldY = new javax.swing.JTextField();
        jButtonCalcular = new javax.swing.JButton();
        jTextFieldResultado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transformações Geométricas");
        setMaximumSize(new java.awt.Dimension(299, 269));
        setMinimumSize(new java.awt.Dimension(299, 269));
        setResizable(false);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(225, 50));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(225, 50));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(225, 50));

        jTableMatriz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Float(1.0),  new Float(0.0),  new Float(0.0)},
                { new Float(0.0),  new Float(1.0),  new Float(0.0)},
                { new Float(0.0),  new Float(0.0),  new Float(1.0)}
            },
            new String [] {
                "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMatriz.setMaximumSize(new java.awt.Dimension(225, 50));
        jTableMatriz.setMinimumSize(new java.awt.Dimension(225, 50));
        jTableMatriz.setName(""); // NOI18N
        jTableMatriz.setPreferredSize(new java.awt.Dimension(225, 50));
        jTableMatriz.getTableHeader().setResizingAllowed(false);
        jTableMatriz.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableMatriz);
        if (jTableMatriz.getColumnModel().getColumnCount() > 0) {
            jTableMatriz.getColumnModel().getColumn(0).setResizable(false);
            jTableMatriz.getColumnModel().getColumn(1).setResizable(false);
            jTableMatriz.getColumnModel().getColumn(2).setResizable(false);
        }
        jTableMatriz.setTableHeader(null);

        jButtonTranslacao.setText("Translação");
        jButtonTranslacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTranslacaoActionPerformed(evt);
            }
        });

        jButtonRotacao.setText("Rotação");
        jButtonRotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRotacaoActionPerformed(evt);
            }
        });

        jButtonEscala.setText("Escala");
        jButtonEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEscalaActionPerformed(evt);
            }
        });

        jTextFieldX.setBackground(new java.awt.Color(240, 240, 240));
        jTextFieldX.setBorder(javax.swing.BorderFactory.createTitledBorder("X"));

        jTextFieldY.setBackground(new java.awt.Color(240, 240, 240));
        jTextFieldY.setBorder(javax.swing.BorderFactory.createTitledBorder("Y"));

        jButtonCalcular.setText("Calcular");
        jButtonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularActionPerformed(evt);
            }
        });

        jTextFieldResultado.setBackground(new java.awt.Color(240, 240, 240));
        jTextFieldResultado.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Transformações Geométricas 2D");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldResultado)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonCalcular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonEscala)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRotacao, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonTranslacao))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextFieldX, jTextFieldY});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonEscala, jButtonTranslacao});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRotacao)
                    .addComponent(jButtonTranslacao)
                    .addComponent(jButtonEscala))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularActionPerformed
        // TODO add your handling code here:
        calcular();   
    }//GEN-LAST:event_jButtonCalcularActionPerformed

    private void jButtonTranslacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTranslacaoActionPerformed
        // TODO add your handling code here:
        translacao();
    }//GEN-LAST:event_jButtonTranslacaoActionPerformed

    private void jButtonEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEscalaActionPerformed
        // TODO add your handling code here:
        escala();
    }//GEN-LAST:event_jButtonEscalaActionPerformed

    private void jButtonRotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRotacaoActionPerformed
        // TODO add your handling code here:
        rotacao();
    }//GEN-LAST:event_jButtonRotacaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMenu().setVisible(true);
            }
        });
    }
    
    //Métodos
    private void escala() {
        float sX = 0;
        float sY = 0;
        boolean erro;
        do{
            try{
                sX = Float.parseFloat(JOptionPane.showInputDialog(this, "Digite o valor de Sx:"));
                erro = false;
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Informe apenas números");
                erro = true;
            }
            catch(NullPointerException e){ 
                erro = false;
            }
        }while(erro);
        
        do{
            try{
                
                sY = Float.parseFloat(JOptionPane.showInputDialog(this, "Digite o valor de Sy:"));
                erro = false;
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Informe apenas números");
                erro = true;
            }
            catch(NullPointerException e){ 
                erro = false;
            }
        }while(erro);
        
        jTableMatriz.setValueAt(sX, 0, 0);
        jTableMatriz.setValueAt(sY, 1, 1);
        
        //tirar a translacao
        jTableMatriz.setValueAt(0, 0, 2);
        jTableMatriz.setValueAt(0, 1, 2);
        //tirar a rotacao
        jTableMatriz.setValueAt(0, 0, 1);
        jTableMatriz.setValueAt(0, 1, 0);
        
        jButtonEscala.setForeground(Color.blue);
        jButtonRotacao.setForeground(Color.red);
        jButtonTranslacao.setForeground(Color.red);
        
        //mudando a variavel global para utilizar no botao calcular
        transformacao = "escala";
    }
    private void translacao() {
        float tX = 0;
        float tY = 0;
        boolean erro;
        do{
            try{
                tX = Float.parseFloat(JOptionPane.showInputDialog(this, "Digite o valor de Tx:"));
                erro = false;
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Informe apenas números");
                erro = true;
            }
            catch(NullPointerException e){ 
                erro = false;
            }
        }while(erro);
        
        do{
            try{
                tY = Float.parseFloat(JOptionPane.showInputDialog(this, "Digite o valor de Ty:"));
                erro = false;
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Informe apenas números");
                erro = true;
            }
            catch(NullPointerException e){ 
                erro = false;
            }
        }while(erro);
        
        jTableMatriz.setValueAt(tX, 0, 2);
        
        jTableMatriz.setValueAt(tY, 1, 2);
        
        //tirar a escala
        jTableMatriz.setValueAt(1, 0, 0);
        jTableMatriz.setValueAt(1, 1, 1);
        //tirar a rotacao
        jTableMatriz.setValueAt(0, 0, 1);
        jTableMatriz.setValueAt(0, 1, 0);
        
        jButtonTranslacao.setForeground(Color.blue);
        jButtonEscala.setForeground(Color.red);
        jButtonRotacao.setForeground(Color.red);
        
        //mudando a variavel global para utilizar no botao calcular
        transformacao = "translacao";
    }
    private void rotacao() {
        float teta = 0;
        boolean erro;
        do{
            try{
                teta = Float.parseFloat(JOptionPane.showInputDialog(this, "Digite o ângulo de teta:"));
                erro = false;
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Informe apenas números");
                erro = true;
            }
            catch(NullPointerException e){ 
                erro = false;
            }
        }while(erro);
        jTableMatriz.setValueAt((float)Math.cos(Math.toRadians(teta)), 0, 0); 
        jTableMatriz.setValueAt((float)-Math.sin(Math.toRadians(teta)), 0, 1);
        jTableMatriz.setValueAt((float)Math.sin(Math.toRadians(teta)), 1, 0);
        jTableMatriz.setValueAt((float)Math.cos(Math.toRadians(teta)), 1, 1);
        
        //tirar a translacao
        jTableMatriz.setValueAt(0, 0, 2);
        jTableMatriz.setValueAt(0, 1, 2);
        
        
        jButtonRotacao.setForeground(Color.blue);
        jButtonEscala.setForeground(Color.red);
        jButtonTranslacao.setForeground(Color.red);
        
        //mudando a variavel global para utilizar no botao calcular
        transformacao = "rotacao";
    }
    private void calcular() {
        float x;
        float y;
        try{
            x = Float.parseFloat(jTextFieldX.getText()); 
            y = Float.parseFloat(jTextFieldY.getText()); 
            
            switch (transformacao) {
                case "translacao":
                    float tX = (float)jTableMatriz.getValueAt(0, 2);
                    float tY = (float)jTableMatriz.getValueAt(1, 2);
                    jTextFieldResultado.setText("(" + (tX+x) + " , " + (tY+y) + ")");
                    break;
                case "escala":
                    float sX = (float)jTableMatriz.getValueAt(0, 0);
                    float sY = (float)jTableMatriz.getValueAt(1, 1);
                    jTextFieldResultado.setText("(" + (sX*x) + " , " + (sY*y) + ")");
                    break;
                case "rotacao":
                    float cosTeta = (float)jTableMatriz.getValueAt(0, 0);
                    float senTeta = (float)jTableMatriz.getValueAt(1, 0);
                    float xU = x * cosTeta - y * senTeta;
                    float yU = y * cosTeta + x *senTeta;
                    jTextFieldResultado.setText("(" + xU + " , " + yU + ")");
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Erro ao calcular");
                    break; 
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Informe apenas números"); 
        } 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalcular;
    private javax.swing.JButton jButtonEscala;
    private javax.swing.JButton jButtonRotacao;
    private javax.swing.JButton jButtonTranslacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMatriz;
    private javax.swing.JTextField jTextFieldResultado;
    private javax.swing.JTextField jTextFieldX;
    private javax.swing.JTextField jTextFieldY;
    // End of variables declaration//GEN-END:variables
}
